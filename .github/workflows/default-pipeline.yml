name: default-pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: (checkout) source code
        uses: actions/checkout@v3

      - name: (run) lint
        uses: ./.github/actions/lint
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          use-cache: true

  test:
    runs-on: ubuntu-latest

    steps:
      - name: (checkout) source code
        uses: actions/checkout@v3

      - name: (run) test
        uses: ./.github/actions/test
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          use-cache: true

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin]
    name: Build / MacOS / ${{ matrix.target }}

    steps:
      - name: (checkout) source code
        uses: actions/checkout@v3

      - name: (run) build
        uses: ./.github/actions/build
        with:
          target: ${{ matrix.target }}
          use-cache: true
          github-token: ${{ env.GITHUB_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]
    name: Build / Linux / ${{ matrix.target }}

    steps:
      - name: (checkout) source code
        uses: actions/checkout@v3

      - name: (run) build
        uses: ./.github/actions/build-with-cross
        with:
          target: ${{ matrix.target }}
          use-cache: true
          github-token: ${{ env.GITHUB_TOKEN }}
