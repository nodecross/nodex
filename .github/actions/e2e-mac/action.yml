name: e2e test
description: "E2E test action"
inputs:
  binary-path:
    required: true
    description: "the path of the binary to be tested"
runs:
  using: composite
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.15.0'

    - name: (setup) install prism
      shell: bash
      run: npm install -g @stoplight/prism-cli

    - name: (setup) copy default config to home
      shell: bash
      run: mkdir -p ~/.config/nodex && cp -r test_resource/config/* ~/.config/nodex/

    - name: Setup and Run Tests
      shell: bash
      run: |
        prism mock -h localhost -p 4010 test_resource/did_sidetree.yaml > sidetree.txt 2>&1 &
        prism mock -h localhost -p 8020 test_resource/studio.yaml > studio.txt 2>&1 &
        sleep 5

        ${{ inputs.binary-path }} > log.txt 2>&1 &
        sleep 5

        cd e2e
        cargo test

        pgrep -f nodex-agent | xargs kill -SIGINT
        sleep 5

        if !grep -q "SIGINT" log.txt; then
          echo "SIGINT not found in log."
          exit 1
        fi

        pids=$(pgrep -f nodex-agent || true)
        # When executing pgrep, if the process does not exist, it exits; therefore, a solution for that is needed.
        if [ -z "$pids" ]; then
          echo "Process not found, as expected."
        else
          echo "Process is still running, which is not expected."
          exit 1
        fi
      env:
        NODEX_DID_HTTP_ENDPOINT: http://localhost:4010
        NODEX_DID_ATTACHMENT_LINK: http://localhost:4010
        NODEX_STUDIO_HTTP_ENDPOINT: http://localhost:8020
        RUST_BACKTRACE: 1

    - name: (run) show log of agent
      shell: bash
      run: cat log.txt
      if: ${{ always() }}

    - name: (run) show mock sidetree log
      shell: bash
      run: cat sidetree.txt
      if: ${{ always() }}

    - name: (run) show mock studio log
      shell: bash
      run: cat studio.txt
      if: ${{ always() }}
