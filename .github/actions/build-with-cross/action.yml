name: build with cross
description: ""
inputs:
  target:
    required: true
    description: ""
  use-cache:
    required: true
    description: ""
  checkout:
    required: false
    description: ""
  binary-file-name:
    required: true
    description: ""
  github-token:
    required: true
    description: ""
runs:
  using: composite
  steps:
    - name: (checkout) source code
      if: ${{ inputs.checkout == 'true' }}
      uses: actions/checkout@v4

    - name: (setup) rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        cache: ${{ inputs.use-cache }}
        cache-key: ${{ inputs.target }}
        rustflags: "" # override default rustflags

    - name: add toolchain
      shell: bash
      run: rustup target add ${{ inputs.target }}

    - name: (setup) sccache
      uses: mozilla-actions/sccache-action@v0.0.7

    - name: (setup) environment variables for sccache
      shell: bash
      run: |
        echo "SCCACHE_GHA_ENABLED=true" >> "$GITHUB_ENV"
        echo "RUSTC_WRAPPER=sccache" >> "$GITHUB_ENV"

    - name: (setup) mold
      uses: rui314/setup-mold@v1

    - name: (configure) mold
      shell: bash
      run: |
        mkdir -p ./.cargo
        echo -e "[target.'cfg(not(target_os = \"darwin\"))']\nrustflags = [\"-C\", \"link-arg=-fuse-ld=mold\"]"

    - name: (install) install development tools
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-llvm-cov,cross

    - name: (run) build
      shell: bash
      run: cross build --target ${{ inputs.target }} --release

    - name: (run) create artifact
      uses: vimtor/action-zip@v1.1
      with:
        files: target/${{ inputs.target }}/release/${{ inputs.binary-file-name }}
        dest: nodex-agent-${{ inputs.target }}.zip

    - name: (run) upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.target }}
        path: nodex-agent-${{ inputs.target }}.zip
