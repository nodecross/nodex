name: e2e test
description: "E2E test action"
inputs:
  binary-path:
    required: true
    description: "the path of the binary to be tested"
runs:
  using: composite
  steps:

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.20.1'

    - name: (setup) copy default config to home
      shell: powershell
      run: New-Item -ItemType Directory -Force -Path $env:USERPROFILE\.config\nodex; Copy-Item test_resource\config\* $env:USERPROFILE\.config\nodex\

    - name: Install Prism CLI
      shell: powershell
      run: npm install -g @stoplight/prism-cli

    - name: Get Prism Path
      id: get-prism-path
      shell: powershell
      run: |
        $prismPath = Get-Command prism | Select-Object -ExpandProperty Source
        echo "::set-output name=prismPath::$prismPath"

    - name: (run) Start Sidetree Prism Mock Server
      shell: powershell
      run: |
        $prismPath = "${{ steps.get-prism-path.outputs.prismPath }}"
        $resourcePath = Join-Path -Path $PWD -ChildPath "test_resource/did_sidetree.yaml"
        $job = Start-Job -ScriptBlock {
          param($prismPath, $resourcePath)
          & "$using:prismPath" mock -h 127.0.0.1 -p 4010 $resourcePath
        } -ArgumentList $prismPath, $resourcePath
        Start-Sleep -Seconds 5
        $jobState = Get-Job -Id $job.Id
        Write-Host "Job State: $($jobState.State)"
        if ($jobState.State -eq 'Running') {
          Write-Host "Mock server running"
          $output = Receive-Job -Job $job
          Write-Host "Job Output: $output"
        } else {
          Write-Host "Mock server did not start correctly"
          exit 1
        }

    - name: (run) Start Studio Prism Mock Server
      shell: powershell
      run: |
        $prismPath = "${{ steps.get-prism-path.outputs.prismPath }}"
        $resourcePath = Join-Path -Path $PWD -ChildPath "test_resource/studio.yaml"
        $job = Start-Job -ScriptBlock {
          param($prismPath, $resourcePath)
          & "$using:prismPath" mock -h 127.0.0.1 -p 8020 $resourcePath
        } -ArgumentList $prismPath, $resourcePath
        Start-Sleep -Seconds 5
        $jobState = Get-Job -Id $job.Id
        Write-Host "Job State: $($jobState.State)"
        if ($jobState.State -eq 'Running') {
          Write-Host "Mock server running"
          $output = Receive-Job -Job $job
          Write-Host "Job Output: $output"
        } else {
          Write-Host "Mock server did not start correctly"
          exit 1
        }

    - name: (run) run agent for e2e tests
      shell: powershell
      run: |
        $agentPath = Join-Path -Path $PWD -ChildPath ${{ inputs.binary-path }}
        $job = Start-Job -ScriptBlock {
            param($path)
            & $path
        } -ArgumentList $agentPath
        Start-Sleep -Seconds 10
        $ports = 4010, 8020, 3000
        foreach ($port in $ports) {
            $connections = Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue
            if ($connections) {
                Write-Host "Port $port is listening."
            } else {
                Write-Host "Port $port is not listening."
            }
        }
        $urls = @("http://127.0.0.1:4010/health", "http://127.0.0.1:8020/health", "http://127.0.0.1:3000/health")
        foreach ($url in $urls) {
            try {
                $response = Invoke-RestMethod -Uri $url -Method Get -UseBasicParsing
                Write-Host "$url response: $($response.StatusCode)"
            } catch {
                Write-Host "$url failed to respond."
            }
        }
        $jobState = Get-Job -Id $job.Id
        Write-Host "Job State: $($jobState.State)"
        if ($job.State -eq 'Completed') {
          $output = Receive-Job -Job $job
          Write-Host "Job Output: $output"
        }
        if ($jobState.State -eq 'Running') {
          Write-Host "agent running"
        } else {
          Write-Host "Mock server did not start correctly"
          exit 1
        }
      env:
        NODEX_DID_HTTP_ENDPOINT: http://127.0.0.1:4010
        NODEX_DID_ATTACHMENT_LINK: http://127.0.0.1:4010
        NODEX_STUDIO_HTTP_ENDPOINT: http://127.0.0.1:8020
        NODEX_SERVER_PORT: 3000
        RUST_BACKTRACE: 1

    - name: (run) e2e tests
      shell: powershell
      working-directory: e2e
      run: cargo test

    - name: (run) shutdown agent by SIGINT
      shell: powershell
      run: |
        Get-Process nodex-agent | Stop-Process -Force
        Start-Sleep -Seconds 3

    - name: (run) Check for 'SIGINT' log message
      shell: powershell
      id: check_logs_for_sigint
      run: |
        if (Select-String -Path log.txt -Pattern "SIGINT") {
          echo "::set-output name=stopped_found::true"
        } else {
          echo "::set-output name=stopped_found::false"
        }

    - name: (run) Verify process is not running in e2e_agent by SIGINT
      shell: powershell
      if: steps.check_logs_for_sigint.outputs.stopped_found == 'true'
      run: $pids = (Get-Process -Name nodex-agent -ErrorAction SilentlyContinue)

    - name: (run) show log of agent
      shell: powershell
      run: Get-Content "agent.log"
      if: ${{ always() }}
