#!/bin/sh
#
# Perform necessary nodex-agent setup steps
# after package is installed.
#

INIT_INSTALL_DIR=/opt/nodex-agent
SERVICE_NAME=nodex-agent
HOME_DIR=/home/nodex
BIN_INSTALL_DIR=$HOME_DIR/bin

set -e

# Check if the user and group already exist, if not, create them
if ! id -u nodex >/dev/null 2>&1; then
    echo "Creating dedicated user and group for nodex-agent..."
    useradd -r -s /bin/false nodex
else
    echo "User nodex already exists."
fi

# Ensure the installation directory exists before setting ownership and permissions
if [ ! -d "${INIT_INSTALL_DIR}" ]; then
    echo "Creating installation directory ${INIT_INSTALL_DIR}..."
    mkdir -p ${INIT_INSTALL_DIR}
else
    echo "Installation directory ${INIT_INSTALL_DIR} already exists."
fi

# Set ownership and permissions
chown -R root:nodex ${INIT_INSTALL_DIR}
chmod -R 750 ${INIT_INSTALL_DIR}
mkdir -p ${HOME_DIR}
chmod -R 755 ${HOME_DIR}

# prepare necessary directory for nodex-agent
if [ ! -d "${BIN_INSTALL_DIR}" ]; then
    echo "Creating bin directory ${BIN_INSTALL_DIR}..."
    mkdir -p ${BIN_INSTALL_DIR}
else
    echo "Bin directory ${BIN_INSTALL_DIR} already exists."
fi

if [ ! -f "${BIN_INSTALL_DIR}/nodex-agent" ]; then
    echo "Moving nodex-agent to bin directory ${BIN_INSTALL_DIR}..."
    mv ${INIT_INSTALL_DIR}/bin/nodex-agent ${BIN_INSTALL_DIR}
else
    echo "${BIN_INSTALL_DIR}/nodex-agent already exists."
fi

if [ ! -d "${HOME_DIR}/.config" ]; then
    echo "Creating config directory ${HOME_DIR}/.config..."
    mkdir -p "${HOME_DIR}/.config"
else
    echo "config directory ${HOME_DIR}/.config already exists."
fi

if [ ! -d "${HOME_DIR}/.nodex" ]; then
    echo "Creating nodex log and runtime directory ${HOME_DIR}/.nodex..."
    mkdir -p "${HOME_DIR}/.nodex/run"
    mkdir -p "${HOME_DIR}/.nodex/logs"
else
    echo "log and runtime directory ${HOME_DIR}/.nodex already exists."
fi

# Set permissions for .config and bin to restrict access to only nodex and root
chmod 740 ${HOME_DIR}/.config
chmod 740 ${BIN_INSTALL_DIR}
chmod -R 755 ${HOME_DIR}/.nodex/run
chown -R nodex:nodex ${HOME_DIR}

# Create a symlink to the agent's binary, handling existing symlink
if [ -L /usr/bin/nodex-agent ]; then
    echo "Updating existing symlink for nodex-agent..."
    ln -sf $BIN_INSTALL_DIR/nodex-agent /usr/bin/nodex-agent
elif [ -e /usr/bin/nodex-agent ]; then
    echo "A file already exists at /usr/bin/nodex-agent. Removing it to create a symlink..."
    rm /usr/bin/nodex-agent
    ln -sf $BIN_INSTALL_DIR/nodex-agent /usr/bin/nodex-agent
else
    echo "Creating a new symlink for nodex-agent..."
    ln -sf $BIN_INSTALL_DIR/nodex-agent /usr/bin/nodex-agent
fi

# Reload systemd to recognize the new service
if command -v systemctl >/dev/null 2>&1; then
    systemctl daemon-reload
else
    echo "[ WARNING ]\tCannot detect a supported init system. The nodex-agent package only provides service files for systemd"
fi

# Enable and start the service
echo "Enabling service $SERVICE_NAME"
if command -v systemctl >/dev/null 2>&1; then
    systemctl daemon-reload
    systemctl enable $SERVICE_NAME
fi

if [ -f "$HOME_DIR/.config/nodex/config.json" ]; then
    echo "(Re)starting $SERVICE_NAME now..."
    if command -v systemctl >/dev/null 2>&1; then
        systemctl restart $SERVICE_NAME || true
    else
        echo "[ WARNING ]\tCannot detect a supported init system. The nodex-agent package only provides service files for systemd"
    fi
fi

echo "$SERVICE_NAME has been installed"
echo "Thank you for installing nodex-agent!"

exit 0
